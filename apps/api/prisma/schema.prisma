// apps/api/prisma/schema.prisma

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

generator client {
  provider = "prisma-client-js"
}

model Tenant {
  id        String   @id @default(uuid())
  name      String
  domain    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  vehicles  Vehicle[]
  clients   Client[]
  rentals   Rental[]
}

model Client {
  id        String   @id @default(uuid())
  tenantId  String
  tenant    Tenant   @relation(fields: [tenantId], references: [id], onDelete: Cascade)

  name      String
  email     String?
  phone     String?
  document  String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  rentals   Rental[]

  @@index([tenantId])
}

model Vehicle {
  id        String   @id @default(uuid())
  tenantId  String
  tenant    Tenant   @relation(fields: [tenantId], references: [id], onDelete: Cascade)

  plate     String
  brand     String
  model     String
  year      Int
  color     String   @default("Prata")
  fuelType  String   @default("Flex")
  category  String   @default("Hatch")

  // Decimal SEM @db.* no SQLite + default
  dailyRate Decimal  @default(120.00)

  status    String   @default("available")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  rentals   Rental[]

  @@index([tenantId])
  @@unique([tenantId, plate])
}

model Rental {
  id        String   @id @default(uuid())
  tenantId  String
  clientId  String
  vehicleId String

  tenant    Tenant   @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  client    Client   @relation(fields: [clientId], references: [id], onDelete: Cascade)
  vehicle   Vehicle  @relation(fields: [vehicleId], references: [id], onDelete: Cascade)

  startDate DateTime
  endDate   DateTime
  status    String   @default("pending")
  // guardamos como texto monet√°rio "135.50" para simplicidade
  amount    String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([tenantId])
  @@index([vehicleId])
}
