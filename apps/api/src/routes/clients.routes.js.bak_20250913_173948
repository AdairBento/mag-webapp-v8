const express = require('express');
const router = express.Router();
const { PrismaClient } = require('@prisma/client');
const prisma = new PrismaClient();

/**
 * GET /api/v1/clients
 * Lista clientes com filtros (tenantId, email, limit)
 */
router.get('/', async (req, res) => {
  const { tenantId, email, limit = 100 } = req.query;
  try {
    const clients = await prisma.client.findMany({
      where: {
        tenantId: tenantId ? String(tenantId) : undefined,
        email: email ? String(email) : undefined,
      },
      take: parseInt(limit),
      select: {
        id: true,
        name: true,
        email: true,
        phone: true,
        document: true,
        address: true,
        tenantId: true,
        tenant: true,
        rentals: { select: { id: true } },
        createdAt: true,
        updatedAt: true,
      },
    });
    return res.status(200).json({ data: clients });
  } catch (err) {
    return res.status(500).json({ error: 'internal_error', message: err.message });
  }
});

/**
 * POST /api/v1/clients
 * Cria um novo cliente
 */
router.post('/', async (req, res) => {
  const { tenantId: tId, name, email, phone, document, address } = req.body;
  try {
    const tenantId = tId || req.get('x-tenant-id') || req.query.tenantId;
    if (!tenantId) return res.status(400).json({ error: 'bad_request', message: 'tenantId required' });
    if (!name)     return res.status(400).json({ error: 'bad_request', message: 'name required' });
    if (!email)    return res.status(400).json({ error: 'bad_request', message: 'email required' });

    const data = {
      tenant:  { connect: { id: String(tenantId) } },
      name:    String(name),
      email:   String(email).toLowerCase(),
      phone:   phone ?? null,
      document:document ?? null,
      address: address ?? null
    };

    const client = await prisma.client.create({ data });
    return res.status(201).json({ data: client });
  } catch (err) {
    const code = err.code === 'P2002' ? 409 : 500;
    return res.status(code).json({ error: code===409?'conflict':'internal_error', message: err.message });
  }
});

module.exports = router;

